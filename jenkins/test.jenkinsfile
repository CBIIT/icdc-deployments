@Library('datacommons-jenkins-shared-library@v1.1') _

pipeline {
	agent {
		node {
			//label 'commons-docker-ncias-p2790-c'
			label 'ncias-p2790-c'
			//label 'slave-ncias-d2940-c'
		}
	}

	
  options {
  	ansiColor('xterm')
	timestamps()
  }

//   tools {
//   	git "git ncias-p2790-c"
//   }

  stages{
  	
	stage('checkout'){

		tool name: 'git ncias-p2790-c', type: 'git'

  		steps {

  		checkout([$class: 'GitSCM',
			branches: [[name: '*/main']],
			doGenerateSubmoduleConfigurations: false,
			extensions: [[$class: 'RelativeTargetDirectory',
			relativeTargetDir: "playbooks"]],
			submoduleCfg: [],
			userRemoteConfigs:
			[[url: 'https://github.com/CBIIT/icdc-deployments']]])

        checkout([$class: 'GitSCM',
			branches: [[name: '*/main']],
			doGenerateSubmoduleConfigurations: false,
			extensions: [[$class: 'RelativeTargetDirectory',
			relativeTargetDir: "${env.PROJECT}-deployments"]],
			submoduleCfg: [],
			userRemoteConfigs:
			[[url: 'https://github.com/CBIIT/icdc-deployments']]])

        }

  	}

  	stage('test'){

		// agent {
        //     docker {
        //         image 'cbiitssrepo/cicd-ansible_4.0'
		// 		registryUrl 'https://index.docker.io/v1'
        //         registryCredentialsId 'dockerhub'
        //         args '--net=host -u root -v /var/run/docker.sock:/var/run/docker.sock'
        //         reuseNode true
        //     }
        // }


 		steps {

			 script {

			    sh label: 'test-Deploy', script: '''#!/bin/bash

                whoami

				groups


			    #which docker

				#docker --version


				'''

			}


 		}

  	}



  }

  post {



    cleanup {

        cleanWs()

    }

  }

}
