- name: deploy interoperation microservice
  hosts: all
  connection: local
  gather_facts: true

  tasks:
    #install collections
    - name: install aws collection
      command: ansible-galaxy collection install {{item}}
      loop:
        - community.docker
        - amazon.aws
        - community.aws:<=3.2.0
        #- git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,main
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,icdc


    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1

    #deploy interoperation
    - name: deploy stage for {{ project }} interoperation
      include_role:
        name: bento.common.ecs
      vars:
        ansible_python_interpreter: "/usr/bin/python3"
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
        project_name: "{{ project_name }}"
        region: "us-east-1"
        container_name: "interoperation"
        interoperation_version: "{{ lookup('env','INTEROPERATION_VERSION') }}"
        image_version: "{{ interoperation_version }}"
        tier: "{{ tier }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1') }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_interoperation', nested=true, region='us-east-1') }}"
        container_port: "8081"
        container_memory: "512"
        container_cpu: "256"
        container_image_url: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}"
        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1') }}"
        container_env:
        - name: VERSION
          value: "{{ interoperation_version }}"
        - name: DATE
          value: "{{ ansible_date_time.date }}"
        - name: PROJECT
          value: "{{ project_name }}"
        - name: BENTO_BACKEND_GRAPHQL_URI
          value: "{% if tier == 'prod' and project_name == 'bento' %}https://{{domain_name}}/v1/graphql/{% elif tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/v1/graphql/{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/v1/graphql/{% endif %}"
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{ project_name }}-{{ tier }}-interoperation-{{ ansible_hostname }}"
