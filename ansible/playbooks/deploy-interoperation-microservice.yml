- name: deploy interoperation microservice
  hosts: all
  connection: local
  gather_facts: true

  tasks:
    #install collections
    - name: install aws collection
      shell: "ansible-galaxy collection install {{ item | quote }} --force"
      loop:
       # - community.docker:<=3.4.3
       # - amazon.aws:<=5.4.0
       # - community.aws:<=3.2.0
        #- git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,main
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,icdc


    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1

    - name: Get the current caller identity information
      aws_caller_info:
      register: caller_info

    - name: set account number
      set_fact:
        account: "{{ caller_info.account }}"
    #deploy interoperation
    - name: deploy stage for {{ project }} interoperation
      include_role:
        #name: bento.common.ecs
        name: bento.common.ecs
      vars:
        ansible_python_interpreter: "/usr/bin/python3"
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
        project_name: "{{ project_name }}"
        service_name: "{{ project_name }}-{{ tier }}-interoperation"
        program: crdc
        region: "us-east-1"
        container_name: "interoperation"
        interoperation_version: "{{ lookup('env','INTEROPERATION_VERSION') }}"
        image_version: "{{ interoperation_version }}"
        tier: "{{ tier }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1') }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_interoperation', nested=true, region='us-east-1') }}"
        container_port: "4030"
        container_memory: "512"
        container_cpu: "256"
        #Redis vars
        redis_password: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.redis_password', nested=true, region='us-east-1') }}"
        enable_redis: "true"
        redis_port: "6379"
        use_cluster: "true"
        #Cloudfront & s3
        redis_host: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_ip', nested=true, region='us-east-1' ) }}"
        s3_access_key_id: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.s3_access_key_id', nested=true, region='us-east-1') }}"
        s3_secret_access_key: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.s3_secret_access_key', nested=true, region='us-east-1') }}"
        file_manifest_bucket_name: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.file_manifest_bucket_name', nested=true, region='us-east-1') }}"
        cloudfront_key_pair_id: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.cloudfront_key_pair_id', nested=true, region='us-east-1') }}"
        cloudfront_private_key: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.cloudfront_private_key', nested=true, region='us-east-1') | b64decode }}"
        cloudfront_domain: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.cloudfront_domain', nested=true, region='us-east-1') }}"
        ###################################################################################
        container_image_url: "{{ ecr_repo }}/{{program}}-{{ project_name }}-{{ container_name }}"
        #container_image_url: "ncidockerhub.nci.nih.gov/icdc/{{ project_name }}-{{ container_name }}"
        #credentialsParameter: "arn:aws:secretsmanager:{{ region }}:{{ account }}:secret:cbiit/docker"
        ###################################################################################
        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1') }}"
        container_env:
        - name: VERSION
          value: "{{ interoperation_version }}"
        - name: DATE
          value: "{{ ansible_date_time.date }}"
        - name: PROJECT
          value: "{{ project_name }}"
        - name: BENTO_BACKEND_GRAPHQL_URI
          value: "{% if tier == 'prod' and project_name == 'bento' %}https://{{domain_name}}/v1/graphql/{% elif tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/v1/graphql/{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/v1/graphql/{% endif %}"
          #value: "https://{{subdomain}}-qa2.{{domain_name}}/v1/graphql/"
          #value: https://caninecommons-test.cancer.gov/v1/graphql/
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{ project_name }}-{{ tier }}-interoperation-{{ ansible_hostname }}"
        ## Redis
        - name: REDIS_ENABLE
          value: "{{ enable_redis }}"
        - name: REDIS_USE_CLUSTER
          value: "{{ use_cluster }}"
        - name: REDIS_HOST
          value: "{{ redis_host }}"
        - name: REDIS_PORT
          value: "{{ redis_port }}"
        - name: REDIS_FILTER_ENABLE
          value: "false"
        - name: REDIS_AUTH_ENABLED
          value: "true"
        - name: REDIS_PASSWORD
          value: "{{ redis_password }}"
        ## Clodfront & s3
        - name: S3_ACCESS_KEY_ID
          value: "{{ s3_access_key_id }}"
        - name: S3_SECRET_ACCESS_KEY
          value: "{{ s3_secret_access_key }}"
        - name: FILE_MANIFEST_BUCKET_NAME
          value: "{{ file_manifest_bucket_name }}"
        - name: CLOUDFRONT_KEY_PAIR_ID
          value: "{{ cloudfront_key_pair_id }}"
        - name: CLOUDFRONT_PRIVATE_KEY
          value: "{{ cloudfront_private_key }}"
        - name: CLOUDFRONT_DOMAIN
          value: "https://{{ cloudfront_domain }}"
        - name: SIGNED_URL_EXPIRY_SECONDS
          value: "86400"
        - name: AWS_REGION
          value: "us-east-1"